{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport ResutImc from \"../ResultImc/index\";\nimport styles from \"./style\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function Form() {\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      height = _useState2[0],\n      setHeight = _useState2[1];\n\n  var _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      weight = _useState4[0],\n      setWeight = _useState4[1];\n\n  var _useState5 = useState(\"Preencha o peso e altura\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      messageImc = _useState6[0],\n      setMessageImc = _useState6[1];\n\n  var _useState7 = useState(null),\n      _useState8 = _slicedToArray(_useState7, 2),\n      imc = _useState8[0],\n      setImc = _useState8[1];\n\n  var _useState9 = useState(\"Calcular\"),\n      _useState10 = _slicedToArray(_useState9, 2),\n      TextButton = _useState10[0],\n      setTextButton = _useState10[1];\n\n  function imcCalculator() {\n    return setImc((weight / (height * height)).toFixed(2));\n  }\n\n  function validationImc() {\n    if (weight != null && height != null) {\n      imcCalculator();\n      setHeight(null);\n      setWeight(null);\n      setMessageImc(\"Seu imc é igual:\");\n      setTextButton(\"Calcular Novamente\");\n      return;\n    }\n\n    setImc(null);\n    setTextButton(\"Calcular\");\n    setMessageImc(\"preencha o peso e altura\");\n  }\n\n  return _jsxs(View, {\n    style: styles.formContext,\n    children: [_jsxs(View, {\n      style: styles.form,\n      children: [_jsx(Text, {\n        children: \"Altura\"\n      }), _jsx(TextInput, {\n        onChangeText: setHeight,\n        value: height,\n        placeholder: \"Ex, 1.71\",\n        keyboardType: \"numeric\"\n      }), _jsx(Text, {\n        children: \"Peso\"\n      }), _jsx(TextInput, {\n        onChangeText: setWeight,\n        value: weight,\n        placeholder: \"Ex, 65.365\",\n        keyboardType: \"numeric\"\n      }), _jsx(Button, {\n        onPress: function onPress() {\n          return validationImc();\n        },\n        title: TextButton\n      })]\n    }), _jsx(ResutImc, {\n      messageResultImc: messageImc,\n      ResultImc: imc\n    })]\n  });\n}","map":{"version":3,"sources":["C:/Users/geand/Desktop/PC/projetos/app-expo-react-native/src/components/Form/index.js"],"names":["React","useState","ResutImc","styles","Form","height","setHeight","weight","setWeight","messageImc","setMessageImc","imc","setImc","TextButton","setTextButton","imcCalculator","toFixed","validationImc","formContext","form"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;;;;;AAIA,OAAOC,QAAP;AACA,OAAOC,MAAP;;;AAEA,eAAe,SAASC,IAAT,GAAiB;AAI5B,kBAA2BH,QAAQ,CAAC,IAAD,CAAnC;AAAA;AAAA,MAAOI,MAAP;AAAA,MAAeC,SAAf;;AACA,mBAA2BL,QAAQ,CAAC,IAAD,CAAnC;AAAA;AAAA,MAAOM,MAAP;AAAA,MAAeC,SAAf;;AACA,mBAAmCP,QAAQ,CAAC,0BAAD,CAA3C;AAAA;AAAA,MAAOQ,UAAP;AAAA,MAAmBC,aAAnB;;AACA,mBAAqBT,QAAQ,CAAC,IAAD,CAA7B;AAAA;AAAA,MAAOU,GAAP;AAAA,MAAYC,MAAZ;;AACA,mBAAmCX,QAAQ,CAAC,UAAD,CAA3C;AAAA;AAAA,MAAOY,UAAP;AAAA,MAAmBC,aAAnB;;AAEA,WAASC,aAAT,GAAwB;AACtB,WAAOH,MAAM,CAAE,CAACL,MAAM,IAAEF,MAAM,GAACA,MAAT,CAAP,EAAyBW,OAAzB,CAAiC,CAAjC,CAAF,CAAb;AACD;;AAID,WAASC,aAAT,GAAyB;AACvB,QAAGV,MAAM,IAAI,IAAV,IAAkBF,MAAM,IAAG,IAA9B,EAAmC;AACjCU,MAAAA,aAAa;AACbT,MAAAA,SAAS,CAAC,IAAD,CAAT;AACAE,MAAAA,SAAS,CAAC,IAAD,CAAT;AACAE,MAAAA,aAAa,CAAC,kBAAD,CAAb;AACAI,MAAAA,aAAa,CAAC,oBAAD,CAAb;AACA;AACD;;AACDF,IAAAA,MAAM,CAAC,IAAD,CAAN;AACAE,IAAAA,aAAa,CAAC,UAAD,CAAb;AACAJ,IAAAA,aAAa,CAAC,0BAAD,CAAb;AACD;;AAID,SAIE,MAAC,IAAD;AAAM,IAAA,KAAK,EAAEP,MAAM,CAACe,WAApB;AAAA,eACM,MAAC,IAAD;AAAM,MAAA,KAAK,EAAEf,MAAM,CAACgB,IAApB;AAAA,iBAEK,KAAC,IAAD;AAAA;AAAA,QAFL,EAIK,KAAC,SAAD;AACA,QAAA,YAAY,EAAEb,SADd;AAEA,QAAA,KAAK,EAAED,MAFP;AAGA,QAAA,WAAW,EAAC,UAHZ;AAIA,QAAA,YAAY,EAAC;AAJb,QAJL,EAYK,KAAC,IAAD;AAAA;AAAA,QAZL,EAcK,KAAC,SAAD;AACE,QAAA,YAAY,EAAEG,SADhB;AAEE,QAAA,KAAK,EAAED,MAFT;AAGE,QAAA,WAAW,EAAC,YAHd;AAIE,QAAA,YAAY,EAAC;AAJf,QAdL,EAqBK,KAAC,MAAD;AAAQ,QAAA,OAAO,EAAE;AAAA,iBAAMU,aAAa,EAAnB;AAAA,SAAjB;AAAwC,QAAA,KAAK,EAAEJ;AAA/C,QArBL;AAAA,MADN,EAyBK,KAAC,QAAD;AAAU,MAAA,gBAAgB,EAAEJ,UAA5B;AAAwC,MAAA,SAAS,EAAEE;AAAnD,MAzBL;AAAA,IAJF;AAiCD","sourcesContent":["import React, {useState} from 'react'\r\nimport { Text, TextInput , View, Button } from 'react-native'\r\n\r\n//importando compónentes\r\nimport ResutImc from '../ResultImc/index'\r\nimport styles from './style';\r\n\r\nexport default function Form () {\r\n\r\n    //calculo de imc\r\n\r\n    const [height, setHeight]= useState(null)\r\n    const [weight, setWeight]= useState(null)\r\n    const [messageImc, setMessageImc]= useState(\"Preencha o peso e altura\");\r\n    const [imc, setImc]= useState(null)\r\n    const [TextButton, setTextButton]= useState(\"Calcular\");\r\n    \r\n    function imcCalculator(){\r\n      return setImc ((weight/(height*height)).toFixed(2))\r\n    }\r\n \r\n    //veriifcar se altura e peso está vazio\r\n\r\n    function validationImc() {\r\n      if(weight != null && height !=null){\r\n        imcCalculator()\r\n        setHeight(null)\r\n        setWeight(null)\r\n        setMessageImc(\"Seu imc é igual:\")\r\n        setTextButton(\"Calcular Novamente\")\r\n        return\r\n      }\r\n      setImc(null)\r\n      setTextButton(\"Calcular\")\r\n      setMessageImc(\"preencha o peso e altura\")\r\n    }\r\n\r\n    //front end / campos de texto e botões\r\n  \r\n    return (\r\n\r\n      //keyboard type e o tipo de teclado, especificamente o teclado numerico\r\n\r\n      <View style={styles.formContext}>\r\n            <View style={styles.form}>\r\n\r\n                 <Text>Altura</Text>\r\n\r\n                 <TextInput \r\n                 onChangeText={setHeight}\r\n                 value={height}\r\n                 placeholder='Ex, 1.71'\r\n                 keyboardType='numeric'\r\n                 \r\n                 />\r\n\r\n                 <Text>Peso</Text>\r\n\r\n                 <TextInput\r\n                   onChangeText={setWeight}\r\n                   value={weight}\r\n                   placeholder='Ex, 65.365'\r\n                   keyboardType='numeric'\r\n\r\n                 />\r\n                 <Button onPress={() => validationImc()} title={TextButton} />\r\n                 \r\n           </View> \r\n           <ResutImc messageResultImc={messageImc} ResultImc={imc}/> \r\n      </View>\r\n\r\n    );\r\n  }"]},"metadata":{},"sourceType":"module"}